/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.com.gepp.cliente;

import java.io.FileOutputStream;

import java.util.Base64;

import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.json.JSONConfiguration;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipFile;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;

import java.util.zip.ZipEntry;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import mx.com.gepp.beans.TripsResponse;
import mx.com.gepp.beans.RenderTabla;

import mx.com.gepp.utilities.Comprimir;
import mx.com.gepp.utilities.Encriptador;
import mx.com.gepp.utilities.Constantes;
import mx.com.gepp.utilities.Descomprimir;

/**
 *
 * @author dspace
 */
public class obtenerViajes extends javax.swing.JFrame {
    
    //botones de tabla ver viajes
    JButton botonVer = new JButton("Ver JSON");
    JButton botonCargar = new JButton("Cargar");
    
    public static int columna,fila;
    
    public obtenerViajes() {
        initComponents();
        
    }

    public void MostrarTabla() {

        DefaultTableModel modeloViajes = new DefaultTableModel();
        String[] columnas = {"ID Viaje", "Ver datos", "Cargar documentos"};

        modeloViajes.setColumnIdentifiers(columnas);
        this.tablaViajes.setDefaultRenderer(Object.class, new RenderTabla());

        tablaViajes.setModel(modeloViajes);

        this.tablaViajes.setRowHeight(40);

        Object[] datos = new Object[3];

        try {

            File viajesDisponibles = new File("archivoSalida.zip");
            ZipFile zip = new ZipFile(viajesDisponibles);

            Enumeration<?> listado = zip.entries();
            ZipEntry ze;
            String nombreArchivo;
            long tamagnio;
            long tamagnioComprimido;

            while (listado.hasMoreElements()) {
                ze = (ZipEntry) listado.nextElement();
                nombreArchivo = ze.getName();
                System.out.println("BYtes:" + ze.toString());
                tamagnio = ze.getSize();
                tamagnioComprimido = ze.getCompressedSize();
                datos[0] = nombreArchivo;
                datos[1] = botonVer;
                datos[2] = botonCargar;

                modeloViajes.addRow(datos);

                //  System.out.printf("Nombre: %s - Tamaño: %d - Tamaño comprimido: %d\n", nombreArchivo, tamagnio, tamagnioComprimido);   
            }
        } catch (IOException ex) {
            Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaViajes = new javax.swing.JTable();
        btn1 = new javax.swing.JButton();
        botonDescomprimir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaViajes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaViajes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaViajesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaViajes);

        btn1.setText("Consultar");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        botonDescomprimir.setText("Descomprimir");
        botonDescomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDescomprimirActionPerformed(evt);
            }
        });

        jButton1.setText("Comprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setText("VIAJES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn1)
                        .addGap(18, 18, 18)
                        .addComponent(botonDescomprimir)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1)
                    .addComponent(botonDescomprimir)
                    .addComponent(jButton1))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 62, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Comprimir crearZip = new Comprimir();

        crearZip.comprimir("Actividades Oscar 48.xlsx", "zipCreado.zip");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonDescomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDescomprimirActionPerformed
        // TODO add your handling code here:
        Descomprimir leerZip = new Descomprimir();
        leerZip.unZip("archivoSalida.zip", "archivoSalida");
    }//GEN-LAST:event_botonDescomprimirActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        botonVer.setName("btnVer");
        botonCargar.setName("btnCargar");
        
        String urlRestService = Constantes.URL_REST_SERVICE;
        String passUser = Constantes.USER_PASS_GEPP;

        ClientConfig clientConfig = new DefaultClientConfig();
        clientConfig.getFeatures().put(JSONConfiguration.FEATURE_POJO_MAPPING, Boolean.TRUE);
        Client client = Client.create(clientConfig);

        WebResource webResource = client.resource(urlRestService);
        ClientResponse response = webResource.path("/verViajes")
                .queryParam("wsUser", Constantes.USER_GEPP)
                .queryParam("numProveedor", Constantes.NUMERO_PROVEEDOR)
                .get(ClientResponse.class);

        System.out.println("Estatus respuesta: " + response.getStatus());
        System.out.println("");

        TripsResponse output = response.getEntity(TripsResponse.class);

        // dato1.setText("Código Error: " + output.getCodigoError() + "\nMensaje Error: " + output.getMensajeError() + "\nzipBase64: " + output.getZipBase64());
        System.out.println("Código Error: " + output.getCodigoError());
        System.out.println("Mensaje Error: " + output.getMensajeError());
        System.out.println("zipBase64: " + output.getZipBase64());

        if (output.getZipBase64() != null) {
            try {
                //Desencriptacion de archivo
                String archivoDesencriptado = (new Encriptador()).desencriptar(output.getZipBase64(), passUser);

                //Obtener los bytes desde base 64
                byte[] bytes = Base64.getDecoder().decode(archivoDesencriptado);

                //Escribir archivo
                try {
                    FileOutputStream fos = new FileOutputStream("archivoSalida.zip");
                    fos.write(bytes);
                    fos.close();
                    System.out.println("Archivo creado exitosamente.");

                    //Mostra en la tabla los nombres de los json que contiene el  ZIP
                    MostrarTabla();
                } catch (Exception e) {
                    System.out.println("Ocurrió un error al grabar el archivo.");
                }
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(obtenerViajes.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("No hay archivo zipBase64 para trabajar.");
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void tablaViajesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaViajesMouseClicked
        // TODO add your handling code here:
        columna =tablaViajes.getColumnModel().getColumnIndexAtX(evt.getX());
        fila = evt.getY()/tablaViajes.getRowHeight();
        
        if(columna<=tablaViajes.getColumnCount() && columna >= 0 && fila <= tablaViajes.getRowCount() && fila >= 0){
            Object objeto = tablaViajes.getValueAt(fila, columna);
            if(objeto instanceof JButton){
              ((JButton) objeto).doClick();
              JButton botones = (JButton) objeto;
              if(botones.getName().equals("btnVer")){
                 // JOptionPane.showMessageDialog(null, "se preisono ver");
                  DetallesViaje datos = new DetallesViaje();
                  datos.setLocationRelativeTo(null);
                  datos.setVisible(true);
              } else
              if(botones.getName().equals("btnCargar")){
                  //JOptionPane.showMessageDialog(null, "se preisono cargar");
                  CargarDocumentos cargar = new CargarDocumentos();
                  cargar.setLocationRelativeTo(null);
                  cargar.setVisible(true);
              } 
              
            }
        }
    }//GEN-LAST:event_tablaViajesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(obtenerViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(obtenerViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(obtenerViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(obtenerViajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                obtenerViajes principal = new obtenerViajes();
                principal.setLocationRelativeTo(null);
                principal.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonDescomprimir;
    private javax.swing.JButton btn1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaViajes;
    // End of variables declaration//GEN-END:variables
}
